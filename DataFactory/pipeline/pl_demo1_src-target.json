{
	"name": "pl_demo1_src-target",
	"properties": {
		"activities": [
			{
				"name": "lkp_oldWatermark",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select * from watermark\nwhere tablename = 'orders'"
					},
					"dataset": {
						"referenceName": "ds_target_orders",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "lkp_NewWaterMark",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select max(insertdatetime) as LastDateTime from orders"
					},
					"dataset": {
						"referenceName": "ds_source_orders",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "cp_IncrementalLoad",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "lkp_oldWatermark",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "lkp_NewWaterMark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT OrderId,ProductId,CustomerId,UnitPrice,Quantity,InsertDatetime FROM orders\nwhere InsertDatetime> '@{activity('lkp_oldWatermark').output.firstRow.WaterMarkValue}'\nand InsertDatetime< '@{activity('lkp_NewWatermark').output.firstRow.LastDateTime}'",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "ds_source_orders",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_target_orders",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Stored Procedure1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "cp_IncrementalLoad",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spSetWaterMark]",
					"storedProcedureParameters": {
						"NewTime": {
							"value": {
								"value": "@activity('lkp_NewWaterMark').output.firstRow.LastDateTime",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TableName": {
							"value": {
								"value": "@activity('lkp_oldWatermark').output.firstRow.TableName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_demo1_target_ds",
					"type": "LinkedServiceReference"
				}
			}
		],
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}